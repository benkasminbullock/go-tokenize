[% start_year=2021 %]
[% MACRO example(file) BLOCK %]
[%- pl =  file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]

produces output

[% INCLUDE $out | xtidy %]

(This example is included as L<F<[% pl %]>|https://fastapi.metacpan.org/source/BKB/Go-Tokenize-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
[% MACRO since(version) BLOCK -%]
This method was added in version [% version %] of the module.
[%- END %]
=encoding UTF-8

=head1 NAME

[% info.colon %] - abstract here.

=head1 SYNOPSIS

    use [% info.colon %];

=head1 VERSION

This documents version [% info.version %] of [% info.name %]
corresponding to L<git commit [% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %].

=head1 DESCRIPTION

=head1 FUNCTIONS

=head2 tokenize

    my $tokens = tokenize ($go);

Given your Go program text in C<$go>, turn it into tokens. The return
value is an array reference which contains hash references. The hash
references have the following keys

=over

=item contents

The text content of the token.

=item end

The position of the final character of the token, in characters. See
L</start> for the numbering. This is the value of L<pos> as the regex
used for matching matches components.

=item line

The line number of the start position of the token, numbered from 1.

=item start

The position of the beginning character of the token, in
characters. This is numbered from 0 for the first character of the
file. If you read the Go file in using C<:encoding(utf8)> and the file
contains non-ASCII characters, this and L</end> will be different from
the byte offsets. Also, because this is the position of the character,
if the token is one character in length, its value will be the same as
L</end>. In other words the length of the token is (end - start + 1).

=item type

The type of the token. Currently the following are supported:

=over

=item comment

=item keyword

=item operator

=item string

=back

=back

=head1 DEPENDENCIES

=over

=item L<Text::LineNumber>

=back

[% INCLUDE "author" %]
